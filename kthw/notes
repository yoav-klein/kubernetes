

To do:
-----
* Worker nodes
* Consider creating a systemd library with common functions like install, uninstall,
    status, etc. for easier management
* Logging library
* Consider a copying engine - you write a file that describes what to copy where,
    and the engine makes sure to perform it - instead of writing it in the 'distribute' function
* Consider ansible?
* etcd: test that systemd service is running
* control-plane: add test


Bugs:
-----
* when running clean_nodes in control-plane, it deletes
kubectl in all the controller machines, but we need it 
to generate the kubeconfigs


Deployment process:
--------
When we come to deploy on the nodes, we basically do the following steps:
- install prerequisites (check if fulfilled, if not install)
- scp files (service files, certificates, kubeconfigs, setup script, etc.)
- copy files to correct location (setup script?)
- install systemd service
- run systemd service

We want to allow the user at any moment:
- stop the services
- uninstall the services
- prune (delete everything we've copied)
- check status



Planning of deployment process
=============================

(talking here about etcd, but relevant for control plane and kubelet)

etcd_agent.sh
-----------
commands:
	- install_prerequisites:
		- install_prerequisites
		
	- install:
		- install

	start:
		- start

	stop:
		- stop

	uninstall:
		- uninstall 
			
	status:
		- status		
	
functions:
	install_prerequisites:
		- check sudoer
		- download etcd binaries
		- install them
		returns: 0/1
	
	install:
		- check sudoer
		- check files exist
		- create directories
		- copy certificates
		- copy service files
		- enable service (if fails - remove previous steps)
	
	start:
		- check service is loaded (status)
		- check binaries installed (status)
		- start service
	stop:
		- check status - if running
		- check status - if loaded
		- stop service
	uninstall:
		- check status - if running
		- check status - if enabled
		- disable service
		- rm files
	
	
		
			
		
etcd_manager.sh
---------------
commands:








