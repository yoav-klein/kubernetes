#!/bin/bash


set -e

cp_home=~/k8s/control-plane
k8s_version={{K8S_VERSION}}

cmd=$1

create_directories() {
    sudo mkdir -p /etc/kubernetes/config
    sudo mkdir -p /var/lib/kubernetes
}

delete_directories() {
    sudo rm -rf /etc/kubernetes/
    sudo rm -rf /var/lib/kubernetes
}

install_binaries() {
# download binaries and install them
    local kube_scheduler_url="https://dl.k8s.io/${k8s_version}/bin/linux/amd64/kube-scheduler"
    local kube_apiserver_url="https://dl.k8s.io/${k8s_version}/bin/linux/amd64/kube-apiserver"
    local kube_controller_manager_url="https://dl.k8s.io/${k8s_version}/bin/linux/amd64/kube-controller-manager"
    local kubectl_url="https://dl.k8s.io/${k8s_version}/bin/linux/amd64/kubectl"
    
   
    curl -sSfL $kube_scheduler_url -o kube-scheduler
    curl -sSfL $kube_apiserver_url -o kube-apiserver
    curl -sSfL $kube_controller_manager_url -o kube-controller-manager
    curl -sSfL $kubectl_url -o kubectl

    chmod +x kube-scheduler kube-apiserver kube-controller-manager kubectl

    sudo mv kube-scheduler kube-apiserver kube-controller-manager kubectl /usr/local/bin

    echo "=== Successfully installed control plane binaries"
}


delete_binaries() {
    sudo rm /usr/local/bin/kube*
}

install_kube_apiserver() {
    sudo cp ${cp_home}/ca.crt /var/lib/kubernetes
    sudo cp ${cp_home}/ca.key /var/lib/kubernetes
    sudo cp ${cp_home}/kube-apiserver.crt /var/lib/kubernetes
    sudo cp ${cp_home}/kube-apiserver.key /var/lib/kubernetes
    sudo cp ${cp_home}/apiserver-etcd-client.crt /var/lib/kubernetes
    sudo cp ${cp_home}/apiserver-etcd-client.key /var/lib/kubernetes
    sudo cp ${cp_home}/apiserver-kubelet-client.crt /var/lib/kubernetes
    sudo cp ${cp_home}/apiserver-kubelet-client.key /var/lib/kubernetes
    sudo cp ${cp_home}/service-accounts.crt /var/lib/kubernetes
    sudo cp ${cp_home}/service-accounts.crt /var/lib/kubernetes
    sudo cp ${cp_home}/service-accounts.key /var/lib/kubernetes
    sudo cp ${cp_home}/encryption-config.yaml /var/lib/kubernetes
    sudo cp ${cp_home}/kube-apiserver.service /etc/systemd/system

    echo "=== installed kube-apiserver"
}

install_kube_scheduler() {
    sudo cp ${cp_home}/kube-scheduler.kubeconfig /var/lib/kubernetes
    sudo cp ${cp_home}/kube-scheduler.yaml /etc/kubernetes/config
    sudo cp ${cp_home}/kube-scheduler.service /etc/systemd/system

    echo "=== installed kube-scheduler"

}

install_kube_controller_manager() {
    sudo cp ${cp_home}/kube-controller-manager.kubeconfig /var/lib/kubernetes
    sudo cp ${cp_home}/kube-controller-manager.service /etc/systemd/system

    echo "=== installed kube-controller-manager"
}

enable_services() {
    sudo systemctl daemon-reload
    sudo systemctl enable kube-apiserver kube-scheduler kube-controller-manager

    echo "=== enabled control plane services"

}

start_services() {
    sudo systemctl start kube-apiserver kube-scheduler kube-controller-manager

    echo "=== Started control plane services"
}

stop_services() {
    sudo systemctl stop kube-apiserver kube-scheduler kube-controller-manager

    echo "=== Stopped control plane services"
}

disable_services() {
    sudo systemctl disable kube-apiserver kube-scheduler kube-controller-manager

    echo "=== Disabled control plane services"
}

uninstall_services() {
    sudo rm /etc/systemd/system/kube-controller-manager.service
    sudo rm /etc/systemd/system/kube-apiserver.service
    sudo rm /etc/systemd/system/kube-scheduler.service
    sudo systemctl daemon-reload

    echo "=== Uninstalled control plane services"

}

status() {
    echo "=== kube-apiserver status"
    sudo systemctl status kube-apiserver

    echo "=== kube-controller-manager status"
    sudo systemctl status kube-controller-manager

    echo "=== kube-scheduler status"
    sudo systemctl status kube-scheduler
}

usage() {
    echo "Usage:"
    echo "cp_manager.sh [install, start, stop, uninstall, status, reset]"
}

case $cmd in
    install) 
        create_directories
        install_binaries
        install_kube_apiserver
        install_kube_controller_manager
        install_kube_scheduler
        enable_services
    ;;
    start) start_services ;;
    stop) stop_services  ;;
    uninstall) 
        disable_services
        uninstall_services
        delete_directories
        delete_binaries
    ;;
    status)
        status
    ;;
    reset) 
        stop_services
        disable_services
        uninstall_services
        delete_directories    
        delete_binaries
    ;;
    *)
        usage
esac
